[{"D:\\Full stack\\BlogDeploy\\src\\index.js":"1","D:\\Full stack\\BlogDeploy\\src\\App.js":"2","D:\\Full stack\\BlogDeploy\\src\\Reducers\\usersReducer.js":"3","D:\\Full stack\\BlogDeploy\\src\\Reducers\\alertReducer.js":"4","D:\\Full stack\\BlogDeploy\\src\\Reducers\\userReducer.js":"5","D:\\Full stack\\BlogDeploy\\src\\Reducers\\blogReducer.js":"6","D:\\Full stack\\BlogDeploy\\src\\components\\Navbar.js":"7","D:\\Full stack\\BlogDeploy\\src\\components\\Blog.js":"8","D:\\Full stack\\BlogDeploy\\src\\components\\BlogView.js":"9","D:\\Full stack\\BlogDeploy\\src\\components\\User.js":"10","D:\\Full stack\\BlogDeploy\\src\\services\\users.js":"11","D:\\Full stack\\BlogDeploy\\src\\services\\login.js":"12","D:\\Full stack\\BlogDeploy\\src\\components\\Login.js":"13","D:\\Full stack\\BlogDeploy\\src\\components\\Users.js":"14","D:\\Full stack\\BlogDeploy\\src\\services\\blogs.js":"15","D:\\Full stack\\BlogDeploy\\src\\components\\Alert.js":"16","D:\\Full stack\\BlogDeploy\\src\\components\\BlogForm.js":"17"},{"size":672,"mtime":1650447997982,"results":"18","hashOfConfig":"19"},{"size":766,"mtime":1650602152540,"results":"20","hashOfConfig":"19"},{"size":540,"mtime":1650448130720,"results":"21","hashOfConfig":"19"},{"size":322,"mtime":1649912457921,"results":"22","hashOfConfig":"19"},{"size":559,"mtime":1650001162644,"results":"23","hashOfConfig":"19"},{"size":1739,"mtime":1650091591572,"results":"24","hashOfConfig":"19"},{"size":1779,"mtime":1650603508047,"results":"25","hashOfConfig":"19"},{"size":2134,"mtime":1650085647057,"results":"26","hashOfConfig":"19"},{"size":2036,"mtime":1650091594562,"results":"27","hashOfConfig":"19"},{"size":821,"mtime":1650455950292,"results":"28","hashOfConfig":"19"},{"size":245,"mtime":1655602790405,"results":"29","hashOfConfig":"19"},{"size":480,"mtime":1655602787073,"results":"30","hashOfConfig":"19"},{"size":4911,"mtime":1650605931034,"results":"31","hashOfConfig":"19"},{"size":734,"mtime":1650448186691,"results":"32","hashOfConfig":"19"},{"size":2340,"mtime":1655602774756,"results":"33","hashOfConfig":"19"},{"size":541,"mtime":1650604587726,"results":"34","hashOfConfig":"19"},{"size":1837,"mtime":1649915784847,"results":"35","hashOfConfig":"19"},{"filePath":"36","messages":"37","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},"3ihupj",{"filePath":"39","messages":"40","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41"},{"filePath":"42","messages":"43","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"44","messages":"45","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"46","messages":"47","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"48","messages":"49","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"50","messages":"51","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"52","messages":"53","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"54"},{"filePath":"55","messages":"56","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57"},{"filePath":"58","messages":"59","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"60","messages":"61","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"62","messages":"63","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"64","messages":"65","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"66"},{"filePath":"67","messages":"68","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"69"},{"filePath":"70","messages":"71","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"72","messages":"73","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"74","messages":"75","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"76"},"D:\\Full stack\\BlogDeploy\\src\\index.js",[],["77","78"],"D:\\Full stack\\BlogDeploy\\src\\App.js",["79","80"],"import React from 'react'\r\nimport Login from './components/Login'\r\nimport {\r\n  BrowserRouter as Router,\r\n  Routes, Route, Link\r\n} from \"react-router-dom\"\r\nimport Users from './components/Users'\r\nimport User from './components/User'\r\nimport Blog from './components/Blog'\r\nimport BlogView from './components/BlogView'\r\nimport Navbar from './components/Navbar'\r\n\r\n\r\nconst App = () => {\r\n  return( \r\n    \r\n    <Router>\r\n     \r\n      <Navbar/>\r\n      <Routes>\r\n       \r\n        <Route path=\"/users\" element={<Users />} />\r\n        <Route path=\"/\" element={ <Login/>} />\r\n        <Route path ='/users/:id' element = {<User/>}/>\r\n        <Route path ='/blogs/:id' element = {<BlogView/>}/>\r\n       \r\n      </Routes>\r\n     \r\n    </Router>\r\n  )\r\n    \r\n}\r\n\r\nexport default App","D:\\Full stack\\BlogDeploy\\src\\Reducers\\usersReducer.js",[],"D:\\Full stack\\BlogDeploy\\src\\Reducers\\alertReducer.js",[],"D:\\Full stack\\BlogDeploy\\src\\Reducers\\userReducer.js",[],"D:\\Full stack\\BlogDeploy\\src\\Reducers\\blogReducer.js",[],"D:\\Full stack\\BlogDeploy\\src\\components\\Navbar.js",[],"D:\\Full stack\\BlogDeploy\\src\\components\\Blog.js",["81"],"import { useState } from \"react\"\r\nimport React from 'react'\r\nimport blogService from '../services/blogs'\r\nimport  PropTypes from \"prop-types\"\r\nimport { useDispatch, useSelector } from \"react-redux\"\r\nimport { deleteBlog, likeBlog } from \"../Reducers/blogReducer\"\r\nimport { Link } from \"react-router-dom\"\r\nconst Blog = ({blog}) =>\r\n{\r\n //console.log(blog.user.name,,user)\r\n  const [disp,setDisp]=useState('basic')\r\n  //const [like,setLike]=useState(blog.likes)\r\n  const like = useSelector(state => state.blog.find(concernBlog=>concernBlog.id === blog.id).likes)\r\n  const dispatch = useDispatch()\r\n  const user = useSelector(state=>state.user)\r\n  const handleLike = async ()=>{\r\n   // const response = await blogService.like(`/api/blogs/update/${blog.id}`)\r\n    //setLike(like+1)\r\n    //blog.likes+=1\r\n\r\n    //setBlogs([...blogs])\r\n    dispatch(likeBlog(blog))\r\n    \r\n    \r\n  }\r\n  \r\n  const handleDelete = async()=>{\r\n    //const response = await blogService.delete_(`/api/blogs/delete/${blog.id}`)\r\n    //setBlogs(blogs.filter((ablog)=>ablog.id!==blog.id))\r\n     dispatch(deleteBlog(blog))\r\n  }\r\n return (\r\n  <div className=\"blog\">\r\n    { disp ==='basic' ?\r\n    <div>\r\n     <h3 className=\"title\"><Link to={`/blogs/${blog.id}`}>{blog.title}</Link></h3>\r\n     <h5>{blog.author}</h5>\r\n     <button type=\"button\" className=\"btn btn-primary\" onClick={()=>setDisp('full')}>Expand</button></div>\r\n     :\r\n     <div>\r\n       <h3>{blog.title}</h3>\r\n       <h5>{blog.author}</h5>\r\n       <p className=\"url\">{blog.url}</p>\r\n       <p className = \"like_no\" >{like} </p>\r\n       <button type=\"button\" className=\"btn btn-primary like\" onClick={()=>handleLike()}>Like</button>\r\n       <br></br>\r\n       {blog.user.name === user.name ?<button type=\"button\" className=\"btn btn-primary\" onClick={()=>handleDelete()}>Remove</button>:\"\"}\r\n       <br></br>\r\n       <button type=\"button\" className=\"btn btn-primary\" onClick={()=>setDisp('basic')}>Hide</button>\r\n     </div>}\r\n  </div>  \r\n)\r\n }\r\nBlog.propTypes = {\r\n  blog : PropTypes.object.isRequired,\r\n  //blogs :PropTypes.array.isRequired,\r\n  //setBlogs : PropTypes.func.isRequired\r\n}\r\nexport default Blog","D:\\Full stack\\BlogDeploy\\src\\components\\BlogView.js",["82","83","84"],"import { useState } from \"react\"\r\nimport React from 'react'\r\nimport blogService from '../services/blogs'\r\nimport  PropTypes from \"prop-types\"\r\nimport { useDispatch, useSelector } from \"react-redux\"\r\nimport { commentBlog, deleteBlog, likeBlog } from \"../Reducers/blogReducer\"\r\nimport { Link, useParams } from \"react-router-dom\"\r\n\r\nconst BlogView = () => {\r\n    const id = useParams().id\r\n    const blog = useSelector(state => state.blog.find(concernBlog=>concernBlog.id ===id))\r\n    \r\n    const like = useSelector(state => state.blog.find(concernBlog=>concernBlog.id === id).likes)\r\n    const dispatch = useDispatch()\r\n    const [comment,setComment] = useState('')\r\n    const user = useSelector(state=>state.user)\r\n    const handleLike = async ()=>{ \r\n      dispatch(likeBlog(blog))   \r\n    }\r\n    \r\n    const handleDelete = async()=>{\r\n       dispatch(deleteBlog(blog))\r\n    }\r\n\r\n    const handleComment = async(event)=>{\r\n      event.preventDefault()\r\n      dispatch(commentBlog(id,comment))\r\n      \r\n      setComment('')\r\n    }\r\n  return (\r\n    <div>\r\n        <div >\r\n       <h3>{blog.title}</h3>\r\n       <h5>{blog.author}</h5>\r\n       <p className=\"url\">{blog.url}</p>\r\n       <p className = \"like_no\" >{like} </p>\r\n       <ul>\r\n       {blog.comments.map(comment=>\r\n        <li>{comment}</li>)}\r\n        </ul>\r\n       <button type=\"button\" className=\"btn btn-primary like\" onClick={()=>handleLike()}>Like</button>\r\n       <br></br>\r\n       {blog.user.name === user.name ?<button type=\"button\" className=\"btn btn-primary\" onClick={()=>handleDelete()}>Remove</button>:\"\"}\r\n       <br></br>\r\n       \r\n     </div>\r\n     \r\n     <form>\r\n    <div className=\"mb-3\">\r\n      <label htmlFor=\"comment\" className=\"form-label\">Comment</label>\r\n      <input type=\"text\" id=\"comment\"className=\"form-control\" value = {comment} onChange={({target})=>setComment(target.value)}/>\r\n     </div>\r\n \r\n   \r\n    <button  className=\"btn btn-primary \" onClick={handleComment}>Comment</button>\r\n  </form>\r\n  </div>\r\n     \r\n    \r\n  )\r\n}\r\n\r\nexport default BlogView","D:\\Full stack\\BlogDeploy\\src\\components\\User.js",[],"D:\\Full stack\\BlogDeploy\\src\\services\\users.js",[],"D:\\Full stack\\BlogDeploy\\src\\services\\login.js",[],"D:\\Full stack\\BlogDeploy\\src\\components\\Login.js",["85","86","87","88","89"],"import {React,useState,useEffect} from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Alert from '../components/Alert'\r\nimport Blog from '../components/Blog'\r\nimport BlogForm from '../components/BlogForm'\r\nimport { createrAlert } from '../Reducers/alertReducer'\r\nimport { initialBlogs, initializeBlogs } from '../Reducers/blogReducer'\r\nimport { login, signIn } from '../Reducers/userReducer'\r\nimport blogService from '../services/blogs'\r\nimport { Link } from 'react-router-dom'\r\nconst Login = () => {\r\n    const [name,setName] = useState('')\r\n    const [password,setPassword] = useState('')\r\n    const [error,setError]=useState(null)\r\n    const [blogVisible,setBlogVisible]=useState(false)\r\n    const dispatch =  useDispatch()\r\n    const user = useSelector(state=>state.user)\r\n    console.log(user.name)\r\n    useEffect(() => {\r\n        const loggedUserJSON = window.localStorage.getItem('loggedinUser')\r\n       \r\n        if (loggedUserJSON) {\r\n          console.log(loggedUserJSON)\r\n          const loggedUser = JSON.parse(loggedUserJSON)\r\n          dispatch(login(loggedUser))\r\n          \r\n          //setUser(user.name)\r\n         // console.log(loggedUser,user)\r\n          blogService.setHeader(user.token)\r\n        }\r\n      }, [])\r\n    \r\n      useEffect( () => {\r\n    \r\n        const initialize = async () =>  dispatch(initialBlogs())\r\n        if (user.name){\r\n          console.log(user.name)\r\n          initialize()}\r\n      }, [user])\r\n      const blogs = useSelector(state=>state.blog)\r\n      console.log(blogs)\r\n    const handleLogin = async (event)=>{\r\n    \r\n        event.preventDefault()\r\n        //console.log(name,password);\r\n        //const user = await login( `/api/login`,{ name , password })\r\n        dispatch(signIn(name,password))\r\n      }\r\n      useEffect(() => {\r\n        if(user.error){\r\n          setError(true)\r\n         \r\n          dispatch(createrAlert({'type':'danger','msg':'Failed Login'}))\r\n          setTimeout(()=>dispatch(createrAlert(null)),5000)\r\n          return\r\n          \r\n        }\r\n        else \r\n          setUser()\r\n      }, [user] )\r\n      \r\n      const setUser = ()=>{\r\n        \r\n        const loggedUserJSON = window.localStorage.getItem('loggedinUser')\r\n        console.log(loggedUserJSON)\r\n        if (!loggedUserJSON && user.name){\r\n        dispatch(createrAlert({'type':'success','msg':'Login'}))\r\n       \r\n        window.localStorage.setItem('loggedinUser',JSON.stringify(user))\r\n       \r\n        blogService.setHeader(user.token)\r\n        setName('')\r\n        setPassword('')\r\n        setTimeout(()=>dispatch(createrAlert(null)),5000)\r\n      }}\r\n      const handleLogout = async ()=>{\r\n        dispatch(login(\"\"))\r\n        dispatch(initializeBlogs([]))\r\n        \r\n        localStorage.removeItem('loggedinUser')\r\n        //setUser('')\r\n       \r\n      } \r\n      const handleVisibility = ()=>{\r\n        setBlogVisible(!blogVisible)\r\n      }\r\n\r\n  return (\r\n    <div className='container'>\r\n         { !user.name && <div className=\"container my-3\">\r\n        {error && <Alert />}\r\n      <form>\r\n  <div className=\"mb-3\">\r\n    <label htmlFor=\"name\" className=\"form-label\">Name</label>\r\n    <input type=\"text\" className=\"form-control\" id =\"name\" value = {name} onChange={({target})=>setName(target.value)}/>\r\n   </div>\r\n  <div className=\"mb-3\">\r\n    <label htmlFor=\"password\" className=\"form-label\">Password</label>\r\n    <input type=\"password\" className=\"form-control\" id=\"password\" value = {password} onChange={({target})=>setPassword(target.value)}/>\r\n  </div>\r\n \r\n  <button  className=\"btn btn-info \"style={{\"backgroundColor\": \"#e3f2fd\"}} id=\"Login\" onClick={handleLogin}>Login</button>\r\n</form>\r\n</div> }\r\n{ user.name && <div>\r\n  <Alert />\r\n  \r\n  </div>}\r\n  {user.name &&   <div>\r\n       {blogVisible?<button type=\"button\" className=\"btn btn-primary  \" style={{\"backgroundColor\": \"#6296e2\"}} onClick={handleVisibility}>Hide Form</button>:<button type=\"button\" className=\"btn btn-primary mt-2\" style={{\"backgroundColor\": \"#7c97e5\"}} onClick={handleVisibility}>Show Form</button>}\r\n      {blogVisible && <div className=\"container\">\r\n       <BlogForm  setBlogVisible={setBlogVisible}  blogVisible={blogVisible}/>\r\n     </div>}\r\n    <h1 className='text-muted'>{user.name}</h1>\r\n     <h2 className='text-info'>Blogs Added </h2>\r\n     </div>}\r\n     <ol className=\"list-group list-group-numbered\">\r\n     {user && \r\n        blogs.map(blog =>\r\n           \r\n            <li className=\"list-group-item d-flex justify-content-between align-items-start\">\r\n              <div className=\"ms-2 me-auto\">\r\n                <div className=\"fw-bold\"><Link to={`/blogs/${blog.id}`}>{blog.title}</Link></div>\r\n                Written by {blog.author}\r\n              </div>\r\n              <span className=\"badge bg-primary rounded-pill\">{blog.likes}</span>\r\n            </li> \r\n        ) \r\n      \r\n      }\r\n      </ol>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Login","D:\\Full stack\\BlogDeploy\\src\\components\\Users.js",["90","91","92"],"import {React,useEffect, useState}from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { Link } from 'react-router-dom'\r\nimport { allUsers } from '../Reducers/usersReducer'\r\nimport userServices from '../services/users'\r\n\r\nconst Users = () => {\r\n    \r\n    const dispatch= useDispatch()\r\n    useEffect(() => {\r\n        dispatch(allUsers())\r\n        \r\n    },[])\r\n    const users = useSelector(state=>state.users)\r\n    console.log(users)\r\n    \r\n  return (\r\n    <div>\r\n        {users.map(user => \r\n        <div key = {user._id} >\r\n            <p> <Link to = {`/users/${user._id}`} >{user.name}</Link> has written {user.blogs.length} blogs </p>\r\n        </div>\r\n        )}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Users","D:\\Full stack\\BlogDeploy\\src\\services\\blogs.js",[],"D:\\Full stack\\BlogDeploy\\src\\components\\Alert.js",[],"D:\\Full stack\\BlogDeploy\\src\\components\\BlogForm.js",["93"],"import React, { useState, useEffect } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { initialBlogs } from '../Reducers/blogReducer'\r\n\r\nimport blogService from '../services/blogs'\r\n\r\n\r\n\r\nconst BlogForm = (props) => {\r\nconst {setBlogVisible,blogVisible}=props\r\n    const [title,setTitle] = useState('')\r\n  const [author,setAuthor] = useState('')\r\n  const [url,setUrl] = useState('')\r\n  const dispatch = useDispatch()\r\n  const blogs = useSelector(state=>state.blog)\r\n    const handleBlog = async (event)=>{\r\n        event.preventDefault()\r\n        console.log(blogs);\r\n        try{ \r\n          \r\n        console.log(await blogService.save('/api/blogs',{title,author,url}))\r\n        }\r\n\r\n        catch(error)\r\n        {\r\n\r\n        }\r\n      \r\n        try{\r\n       dispatch(initialBlogs()) \r\n       }\r\n        catch{  \r\n        }\r\n        setTitle('')\r\n        setAuthor('')\r\n        setUrl('')\r\n        setBlogVisible(!blogVisible)\r\n      }\r\n  return (\r\n    <div><form>\r\n    <div className=\"mb-3\">\r\n      <label htmlFor=\"name\" className=\"form-label\">Name</label>\r\n      <input type=\"text\" id=\"name\"className=\"form-control\" value = {title} onChange={({target})=>setTitle(target.value)}/>\r\n     </div>\r\n    <div className=\"mb-3\">\r\n      <label htmlFor=\"author\" className=\"form-label\">Author</label>\r\n      <input type=\"text\" id=\"author\" className=\"form-control\" value = {author} onChange={({target})=>setAuthor(target.value)}/>\r\n    </div>\r\n    <div className=\"mb-3\">\r\n      <label htmlFor=\"url\" className=\"form-label\">Url</label>\r\n      <input type=\"text\" id=\"url\" className=\"form-control\" value = {url} onChange={({target})=>setUrl(target.value)}/>\r\n    </div>\r\n   \r\n    <button  className=\"btn btn-primary \" onClick={handleBlog}>Save</button>\r\n  </form></div>\r\n  )\r\n}\r\n\r\nexport default BlogForm\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n",{"ruleId":"94","replacedBy":"95"},{"ruleId":"96","replacedBy":"97"},{"ruleId":"98","severity":1,"message":"99","line":5,"column":18,"nodeType":"100","messageId":"101","endLine":5,"endColumn":22},{"ruleId":"98","severity":1,"message":"102","line":9,"column":8,"nodeType":"100","messageId":"101","endLine":9,"endColumn":12},{"ruleId":"98","severity":1,"message":"103","line":3,"column":8,"nodeType":"100","messageId":"101","endLine":3,"endColumn":19},{"ruleId":"98","severity":1,"message":"103","line":3,"column":8,"nodeType":"100","messageId":"101","endLine":3,"endColumn":19},{"ruleId":"98","severity":1,"message":"104","line":4,"column":9,"nodeType":"100","messageId":"101","endLine":4,"endColumn":18},{"ruleId":"98","severity":1,"message":"99","line":7,"column":10,"nodeType":"100","messageId":"101","endLine":7,"endColumn":14},{"ruleId":"98","severity":1,"message":"102","line":4,"column":8,"nodeType":"100","messageId":"101","endLine":4,"endColumn":12},{"ruleId":"105","severity":1,"message":"106","line":31,"column":10,"nodeType":"107","endLine":31,"endColumn":12,"suggestions":"108"},{"ruleId":"105","severity":1,"message":"109","line":39,"column":10,"nodeType":"107","endLine":39,"endColumn":16,"suggestions":"110"},{"ruleId":"105","severity":1,"message":"111","line":60,"column":10,"nodeType":"107","endLine":60,"endColumn":16,"suggestions":"112"},{"ruleId":"98","severity":1,"message":"113","line":76,"column":13,"nodeType":"100","messageId":"101","endLine":76,"endColumn":25},{"ruleId":"98","severity":1,"message":"114","line":1,"column":26,"nodeType":"100","messageId":"101","endLine":1,"endColumn":34},{"ruleId":"98","severity":1,"message":"115","line":5,"column":8,"nodeType":"100","messageId":"101","endLine":5,"endColumn":20},{"ruleId":"105","severity":1,"message":"109","line":13,"column":7,"nodeType":"107","endLine":13,"endColumn":9,"suggestions":"116"},{"ruleId":"98","severity":1,"message":"117","line":1,"column":27,"nodeType":"100","messageId":"101","endLine":1,"endColumn":36},"no-native-reassign",["118"],"no-negated-in-lhs",["119"],"no-unused-vars","'Link' is defined but never used.","Identifier","unusedVar","'Blog' is defined but never used.","'blogService' is defined but never used.","'PropTypes' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'dispatch' and 'user.token'. Either include them or remove the dependency array.","ArrayExpression",["120"],"React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.",["121"],"React Hook useEffect has missing dependencies: 'dispatch' and 'setUser'. Either include them or remove the dependency array.",["122"],"'handleLogout' is assigned a value but never used.","'useState' is defined but never used.","'userServices' is defined but never used.",["123"],"'useEffect' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"124","fix":"125"},{"desc":"126","fix":"127"},{"desc":"128","fix":"129"},{"desc":"130","fix":"131"},"Update the dependencies array to be: [dispatch, user.token]",{"range":"132","text":"133"},"Update the dependencies array to be: [dispatch, user]",{"range":"134","text":"135"},"Update the dependencies array to be: [dispatch, setUser, user]",{"range":"136","text":"137"},"Update the dependencies array to be: [dispatch]",{"range":"138","text":"139"},[1255,1257],"[dispatch, user.token]",[1457,1463],"[dispatch, user]",[2092,2098],"[dispatch, setUser, user]",[379,381],"[dispatch]"]